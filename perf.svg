<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>__lsan::ScanGlobalRange (11,428,851 samples, 1.91%)</title><rect x="1162.4" y="501" width="22.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1165.39" y="511.5" >_..</text>
</g>
<g >
<title>llvm::ModuleToPostOrderCGSCCPassAdaptor::run (7,860,714 samples, 1.31%)</title><rect x="59.1" y="293" width="15.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="62.12" y="303.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (30,153,923 samples, 5.04%)</title><rect x="92.7" y="501" width="59.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="95.66" y="511.5" >[ld-li..</text>
</g>
<g >
<title>bfd_close_all_done (11,559,918 samples, 1.93%)</title><rect x="964.8" y="517" width="22.8" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="967.77" y="527.5" >b..</text>
</g>
<g >
<title>[libbfd-2.45.0.so] (10,634,694 samples, 1.78%)</title><rect x="896.5" y="453" width="21.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="899.53" y="463.5" ></text>
</g>
<g >
<title>llvm::PassManager&lt;llvm::Function, llvm::AnalysisManager&lt;llvm::Function&gt;&gt;::run (7,860,714 samples, 1.31%)</title><rect x="59.1" y="165" width="15.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="62.12" y="175.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="293" width="16.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1122.26" y="303.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (17,439,569 samples, 2.92%)</title><rect x="24.7" y="485" width="34.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="27.72" y="495.5" >[l..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (30,153,923 samples, 5.04%)</title><rect x="92.7" y="549" width="59.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="95.66" y="559.5" >[ld-li..</text>
</g>
<g >
<title>[ld] (25,088,371 samples, 4.19%)</title><rect x="313.1" y="405" width="49.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="316.11" y="415.5" >[ld]</text>
</g>
<g >
<title>llvm::JumpThreadingPass::runImpl (7,860,714 samples, 1.31%)</title><rect x="59.1" y="117" width="15.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="62.12" y="127.5" ></text>
</g>
<g >
<title>__lsan::PointsIntoChunk (6,677,200 samples, 1.12%)</title><rect x="1162.4" y="485" width="13.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1165.39" y="495.5" ></text>
</g>
<g >
<title>fnmatch (39,063,638 samples, 6.53%)</title><rect x="460.4" y="405" width="77.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="463.41" y="415.5" >fnmatch</text>
</g>
<g >
<title>bfd_elf64_swap_reloca_in (9,646,357 samples, 1.61%)</title><rect x="720.4" y="405" width="19.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="723.41" y="415.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (30,153,923 samples, 5.04%)</title><rect x="92.7" y="565" width="59.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="95.66" y="575.5" >[ld-li..</text>
</g>
<g >
<title>[libc.so.6] (17,001,577 samples, 2.84%)</title><rect x="59.1" y="549" width="33.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="62.12" y="559.5" >[l..</text>
</g>
<g >
<title>main (17,001,577 samples, 2.84%)</title><rect x="59.1" y="533" width="33.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="62.12" y="543.5" >main</text>
</g>
<g >
<title>qsort_r (3,125,748 samples, 0.52%)</title><rect x="1039.1" y="501" width="6.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1042.14" y="511.5" ></text>
</g>
<g >
<title>bfd_section_from_shdr (14,633,714 samples, 2.45%)</title><rect x="386.1" y="437" width="28.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="389.13" y="447.5" >bf..</text>
</g>
<g >
<title>htab_hash_string (18,783,251 samples, 3.14%)</title><rect x="537.5" y="405" width="37.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="540.46" y="415.5" >hta..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="341" width="16.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1122.26" y="351.5" ></text>
</g>
<g >
<title>llvm::llvm_shutdown (2,565,614 samples, 0.43%)</title><rect x="1184.9" y="501" width="5.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1187.94" y="511.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (10,072,972 samples, 1.68%)</title><rect x="1142.5" y="517" width="19.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1145.52" y="527.5" ></text>
</g>
<g >
<title>clang_main (17,001,577 samples, 2.84%)</title><rect x="59.1" y="517" width="33.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="62.12" y="527.5" >cl..</text>
</g>
<g >
<title>[libbfd-2.45.0.so] (9,646,357 samples, 1.61%)</title><rect x="720.4" y="421" width="19.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="723.41" y="431.5" ></text>
</g>
<g >
<title>[libclang-cpp.so.20.1] (7,860,714 samples, 1.31%)</title><rect x="59.1" y="389" width="15.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="62.12" y="399.5" ></text>
</g>
<g >
<title>bfd_link_hash_traverse (13,553,389 samples, 2.27%)</title><rect x="739.4" y="453" width="26.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="742.44" y="463.5" >b..</text>
</g>
<g >
<title>__lsan::CheckForLeaksCallback (25,130,816 samples, 4.20%)</title><rect x="1135.4" y="549" width="49.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1138.36" y="559.5" >__lsa..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (17,205,020 samples, 2.88%)</title><rect x="987.6" y="501" width="33.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="990.57" y="511.5" >[l..</text>
</g>
<g >
<title>[unknown] (8,035,814 samples, 1.34%)</title><rect x="574.5" y="325" width="15.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="577.52" y="335.5" ></text>
</g>
<g >
<title>__asan::AsanInitFromRtl (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="549" width="16.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1122.26" y="559.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (26,142,917 samples, 4.37%)</title><rect x="987.6" y="549" width="51.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="990.57" y="559.5" >[ld-l..</text>
</g>
<g >
<title>bfd_elf_size_dynamic_sections (57,679,931 samples, 9.64%)</title><rect x="695.2" y="485" width="113.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="698.19" y="495.5" >bfd_elf_size_d..</text>
</g>
<g >
<title>llvm::llvm_shutdown_obj::~llvm_shutdown_obj (2,565,614 samples, 0.43%)</title><rect x="1184.9" y="517" width="5.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1187.94" y="527.5" ></text>
</g>
<g >
<title>clang (30,153,923 samples, 5.04%)</title><rect x="92.7" y="597" width="59.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="95.66" y="607.5" >clang</text>
</g>
<g >
<title>[libc.so.6] (2,565,614 samples, 0.43%)</title><rect x="1184.9" y="549" width="5.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1187.94" y="559.5" ></text>
</g>
<g >
<title>bfd_elf64_checksum_contents (10,443,242 samples, 1.75%)</title><rect x="944.2" y="453" width="20.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="947.17" y="463.5" ></text>
</g>
<g >
<title>[libLLVM.so.20.1] (7,860,714 samples, 1.31%)</title><rect x="59.1" y="149" width="15.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="62.12" y="159.5" ></text>
</g>
<g >
<title>objalloc_free (11,559,918 samples, 1.93%)</title><rect x="964.8" y="453" width="22.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="967.77" y="463.5" >o..</text>
</g>
<g >
<title>__sanitizer::internal_clone (25,130,816 samples, 4.20%)</title><rect x="1135.4" y="581" width="49.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1138.36" y="591.5" >__san..</text>
</g>
<g >
<title>[libc.so.6] (8,035,814 samples, 1.34%)</title><rect x="574.5" y="341" width="15.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="577.52" y="351.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (3,750,439 samples, 0.63%)</title><rect x="1098.4" y="469" width="7.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1101.45" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (423,500,208 samples, 70.80%)</title><rect x="152.1" y="549" width="835.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="155.15" y="559.5" >[libc.so.6]</text>
</g>
<g >
<title>ld (423,500,208 samples, 70.80%)</title><rect x="152.1" y="597" width="835.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="155.15" y="607.5" >ld</text>
</g>
<g >
<title>sed (3,125,748 samples, 0.52%)</title><rect x="1039.1" y="597" width="6.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1042.14" y="607.5" ></text>
</g>
<g >
<title>[ld] (10,443,242 samples, 1.75%)</title><rect x="944.2" y="485" width="20.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="947.17" y="495.5" ></text>
</g>
<g >
<title>[ld] (10,443,242 samples, 1.75%)</title><rect x="944.2" y="437" width="20.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="947.17" y="447.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (10,624,790 samples, 1.78%)</title><rect x="1000.6" y="485" width="20.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1003.55" y="495.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (3,628,993 samples, 0.61%)</title><rect x="1135.4" y="501" width="7.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1138.36" y="511.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::run (7,860,714 samples, 1.31%)</title><rect x="59.1" y="133" width="15.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="62.12" y="143.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (24,902,062 samples, 4.16%)</title><rect x="10.0" y="501" width="49.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[ld-..</text>
</g>
<g >
<title>bfd_elf_link_record_dynamic_symbol (10,214,899 samples, 1.71%)</title><rect x="788.8" y="437" width="20.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="791.82" y="447.5" ></text>
</g>
<g >
<title>llvm::CGSCCToFunctionPassAdaptor::run (7,860,714 samples, 1.31%)</title><rect x="59.1" y="197" width="15.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="62.12" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,958,398 samples, 2.00%)</title><rect x="836.7" y="453" width="23.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="839.68" y="463.5" >[..</text>
</g>
<g >
<title>[libbfd-2.45.0.so] (25,088,371 samples, 4.19%)</title><rect x="313.1" y="421" width="49.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="316.11" y="431.5" >[lib..</text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (9,140,863 samples, 1.53%)</title><rect x="74.6" y="277" width="18.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="77.63" y="287.5" ></text>
</g>
<g >
<title>[ld] (100,026,097 samples, 16.72%)</title><rect x="165.3" y="469" width="197.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="168.28" y="479.5" >[ld]</text>
</g>
<g >
<title>_bfd_elf_link_iterate_on_relocs (9,646,357 samples, 1.61%)</title><rect x="720.4" y="453" width="19.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="723.41" y="463.5" ></text>
</g>
<g >
<title>__sanitizer::TracerThread (25,130,816 samples, 4.20%)</title><rect x="1135.4" y="565" width="49.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1138.36" y="575.5" >__san..</text>
</g>
<g >
<title>[libc.so.6] (3,125,748 samples, 0.52%)</title><rect x="1039.1" y="469" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1042.14" y="479.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (9,140,863 samples, 1.53%)</title><rect x="74.6" y="373" width="18.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="77.63" y="383.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (26,893,512 samples, 4.50%)</title><rect x="1066.2" y="549" width="53.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1069.20" y="559.5" >[ld-l..</text>
</g>
<g >
<title>bfd_elf_discard_info (14,381,157 samples, 2.40%)</title><rect x="666.8" y="485" width="28.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="669.82" y="495.5" >bf..</text>
</g>
<g >
<title>[libLLVM.so.20.1] (2,565,614 samples, 0.43%)</title><rect x="1184.9" y="485" width="5.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1187.94" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,125,748 samples, 0.52%)</title><rect x="1039.1" y="453" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1042.14" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (62,535,470 samples, 10.45%)</title><rect x="165.3" y="453" width="123.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="168.28" y="463.5" >[libc.so.6]</text>
</g>
<g >
<title>_bfd_elf_parse_eh_frame (14,381,157 samples, 2.40%)</title><rect x="666.8" y="469" width="28.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="669.82" y="479.5" >_b..</text>
</g>
<g >
<title>[libc.so.6] (11,958,398 samples, 2.00%)</title><rect x="836.7" y="469" width="23.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="839.68" y="479.5" >[..</text>
</g>
<g >
<title>[libLLVM.so.20.1] (9,140,863 samples, 1.53%)</title><rect x="74.6" y="341" width="18.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="77.63" y="351.5" ></text>
</g>
<g >
<title>bfd_hash_insert (10,214,899 samples, 1.71%)</title><rect x="788.8" y="405" width="20.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="791.82" y="415.5" ></text>
</g>
<g >
<title>__sanitizer::InternalAlloc (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="405" width="16.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1122.26" y="415.5" ></text>
</g>
<g >
<title>__sanitizer::ParseHex (4,768,184 samples, 0.80%)</title><rect x="1045.3" y="565" width="9.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1048.31" y="575.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (35,058,669 samples, 5.86%)</title><rect x="1066.2" y="565" width="69.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1069.20" y="575.5" >[ld-lin..</text>
</g>
<g >
<title>__lsan::ProcessGlobalRegionsCallback (11,428,851 samples, 1.91%)</title><rect x="1162.4" y="517" width="22.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1165.39" y="527.5" >_..</text>
</g>
<g >
<title>__sanitizer::dl_iterate_phdr_cb (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="469" width="16.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1122.26" y="479.5" ></text>
</g>
<g >
<title>__libc_start_main (17,001,577 samples, 2.84%)</title><rect x="59.1" y="565" width="33.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="62.12" y="575.5" >__..</text>
</g>
<g >
<title>[ld] (401,497,048 samples, 67.12%)</title><rect x="152.1" y="517" width="792.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="155.15" y="527.5" >[ld]</text>
</g>
<g >
<title>[ld] (423,500,208 samples, 70.80%)</title><rect x="152.1" y="533" width="835.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="155.15" y="543.5" >[ld]</text>
</g>
<g >
<title>[ld] (10,443,242 samples, 1.75%)</title><rect x="944.2" y="421" width="20.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="947.17" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (39,063,638 samples, 6.53%)</title><rect x="460.4" y="389" width="77.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="463.41" y="399.5" >[libc.so..</text>
</g>
<g >
<title>main (2,565,614 samples, 0.43%)</title><rect x="1184.9" y="533" width="5.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1187.94" y="543.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (20,094,804 samples, 3.36%)</title><rect x="1066.2" y="517" width="39.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1069.20" y="527.5" >[ld..</text>
</g>
<g >
<title>bfd_link_hash_traverse (21,695,015 samples, 3.63%)</title><rect x="766.2" y="469" width="42.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="769.17" y="479.5" >bfd_..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (17,205,020 samples, 2.88%)</title><rect x="987.6" y="533" width="33.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="990.57" y="543.5" >[l..</text>
</g>
<g >
<title>[libc.so.6] (11,559,918 samples, 1.93%)</title><rect x="964.8" y="421" width="22.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="967.77" y="431.5" >[..</text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (9,140,863 samples, 1.53%)</title><rect x="74.6" y="357" width="18.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="77.63" y="367.5" ></text>
</g>
<g >
<title>bfd_check_format_matches_lto (26,561,338 samples, 4.44%)</title><rect x="362.6" y="469" width="52.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="365.60" y="479.5" >bfd_c..</text>
</g>
<g >
<title>_start (17,001,577 samples, 2.84%)</title><rect x="59.1" y="581" width="33.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="62.12" y="591.5" >_s..</text>
</g>
<g >
<title>[unknown] (4,768,184 samples, 0.80%)</title><rect x="1045.3" y="581" width="9.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1048.31" y="591.5" ></text>
</g>
<g >
<title>qsort_r (11,958,398 samples, 2.00%)</title><rect x="836.7" y="485" width="23.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="839.68" y="495.5" >q..</text>
</g>
<g >
<title>llvm-as (26,142,917 samples, 4.37%)</title><rect x="987.6" y="597" width="51.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="990.57" y="607.5" >llvm-as</text>
</g>
<g >
<title>llvm::JumpThreadingPass::processBlock (7,860,714 samples, 1.31%)</title><rect x="59.1" y="101" width="15.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="62.12" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,281,125 samples, 2.22%)</title><rect x="511.3" y="373" width="26.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="514.27" y="383.5" >[..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (20,094,804 samples, 3.36%)</title><rect x="1066.2" y="533" width="39.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1069.20" y="543.5" >[ld..</text>
</g>
<g >
<title>__sanitizer::AddModuleSegments (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="453" width="16.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1122.26" y="463.5" ></text>
</g>
<g >
<title>bfd_hash_lookup (26,245,995 samples, 4.39%)</title><rect x="590.4" y="421" width="51.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="593.37" y="431.5" >bfd_h..</text>
</g>
<g >
<title>[libc.so.6] (11,708,921 samples, 1.96%)</title><rect x="339.5" y="341" width="23.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.51" y="351.5" >[..</text>
</g>
<g >
<title>[libc.so.6] (25,088,371 samples, 4.19%)</title><rect x="313.1" y="373" width="49.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="316.11" y="383.5" >[lib..</text>
</g>
<g >
<title>[libLLVM.so.20.1] (7,860,714 samples, 1.31%)</title><rect x="59.1" y="309" width="15.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="62.12" y="319.5" ></text>
</g>
<g >
<title>[libbfd-2.45.0.so] (19,502,465 samples, 3.26%)</title><rect x="879.0" y="469" width="38.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="882.04" y="479.5" >[li..</text>
</g>
<g >
<title>temp_exec (10,593,003 samples, 1.77%)</title><rect x="1045.3" y="597" width="20.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1048.31" y="607.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (10,181,151 samples, 1.70%)</title><rect x="132.1" y="469" width="20.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="135.06" y="479.5" ></text>
</g>
<g >
<title>clang::ExecuteCompilerInvocation (17,001,577 samples, 2.84%)</title><rect x="59.1" y="469" width="33.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="62.12" y="479.5" >cl..</text>
</g>
<g >
<title>[libbfd-2.45.0.so] (11,480,116 samples, 1.92%)</title><rect x="766.2" y="437" width="22.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="769.17" y="447.5" >[..</text>
</g>
<g >
<title>[libLLVM.so.20.1] (7,860,714 samples, 1.31%)</title><rect x="59.1" y="277" width="15.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="62.12" y="287.5" ></text>
</g>
<g >
<title>_bfd_elf_make_section_from_shdr (14,633,714 samples, 2.45%)</title><rect x="386.1" y="421" width="28.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="389.13" y="431.5" >_b..</text>
</g>
<g >
<title>llvm::LazyValueInfoImpl::solve (7,860,714 samples, 1.31%)</title><rect x="59.1" y="37" width="15.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="62.12" y="47.5" ></text>
</g>
<g >
<title>llvm::PassManager&lt;llvm::LazyCallGraph::SCC, llvm::AnalysisManager&lt;llvm::LazyCallGraph::SCC, llvm::LazyCallGraph&amp;&gt;, llvm::LazyCallGraph&amp;, llvm::CGSCCUpdateResult&amp;&gt;::run (7,860,714 samples, 1.31%)</title><rect x="59.1" y="229" width="15.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="62.12" y="239.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (9,140,863 samples, 1.53%)</title><rect x="74.6" y="389" width="18.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="77.63" y="399.5" ></text>
</g>
<g >
<title>[libbfd-2.45.0.so] (21,695,015 samples, 3.63%)</title><rect x="766.2" y="453" width="42.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="769.17" y="463.5" >[lib..</text>
</g>
<g >
<title>clang::CompilerInstance::ExecuteAction (17,001,577 samples, 2.84%)</title><rect x="59.1" y="453" width="33.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="62.12" y="463.5" >cl..</text>
</g>
<g >
<title>[ld] (257,039,959 samples, 42.97%)</title><rect x="159.8" y="485" width="507.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="162.76" y="495.5" >[ld]</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (24,902,062 samples, 4.16%)</title><rect x="10.0" y="549" width="49.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >[ld-..</text>
</g>
<g >
<title>[libc.so.6] (8,035,814 samples, 1.34%)</title><rect x="574.5" y="357" width="15.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="577.52" y="367.5" ></text>
</g>
<g >
<title>bfd_elf_final_link (42,529,511 samples, 7.11%)</title><rect x="860.3" y="501" width="83.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="863.27" y="511.5" >bfd_elf_f..</text>
</g>
<g >
<title>[libc.so.6] (3,125,748 samples, 0.52%)</title><rect x="1039.1" y="549" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1042.14" y="559.5" ></text>
</g>
<g >
<title>bfd_hash_insert (8,035,814 samples, 1.34%)</title><rect x="574.5" y="421" width="15.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="577.52" y="431.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (24,902,062 samples, 4.16%)</title><rect x="10.0" y="565" width="49.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >[ld-..</text>
</g>
<g >
<title>dl_iterate_phdr (11,428,851 samples, 1.91%)</title><rect x="1162.4" y="533" width="22.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1165.39" y="543.5" >d..</text>
</g>
<g >
<title>__sanitizer::MmapOrDie (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="309" width="16.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1122.26" y="319.5" ></text>
</g>
<g >
<title>[libbfd-2.45.0.so] (8,112,707 samples, 1.36%)</title><rect x="386.1" y="405" width="16.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="389.13" y="415.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfoImpl::getValueOnEdge (7,860,714 samples, 1.31%)</title><rect x="59.1" y="53" width="15.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="62.12" y="63.5" ></text>
</g>
<g >
<title>bfd_elf64_object_p (26,561,338 samples, 4.44%)</title><rect x="362.6" y="453" width="52.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="365.60" y="463.5" >bfd_e..</text>
</g>
<g >
<title>[libLLVM.so.20.1] (7,860,714 samples, 1.31%)</title><rect x="59.1" y="213" width="15.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="62.12" y="223.5" ></text>
</g>
<g >
<title>bfd_hash_lookup (6,521,007 samples, 1.09%)</title><rect x="402.1" y="389" width="12.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="405.14" y="399.5" ></text>
</g>
<g >
<title>clang::CodeGenAction::ExecuteAction (17,001,577 samples, 2.84%)</title><rect x="59.1" y="421" width="33.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="62.12" y="431.5" >cl..</text>
</g>
<g >
<title>__lsan::ForEachChunk (13,701,965 samples, 2.29%)</title><rect x="1135.4" y="533" width="27.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1138.36" y="543.5" >_..</text>
</g>
<g >
<title>bfd_demangle (9,586,687 samples, 1.60%)</title><rect x="441.5" y="405" width="18.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="444.49" y="415.5" ></text>
</g>
<g >
<title>__sanitizer::LoadedModule::set (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="437" width="16.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1122.26" y="447.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getPredicateAt (7,860,714 samples, 1.31%)</title><rect x="59.1" y="85" width="15.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="62.12" y="95.5" ></text>
</g>
<g >
<title>_objalloc_alloc (8,035,814 samples, 1.34%)</title><rect x="574.5" y="373" width="15.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="577.52" y="383.5" ></text>
</g>
<g >
<title>__asan::AsanInitInternal (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="533" width="16.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1122.26" y="543.5" ></text>
</g>
<g >
<title>bfd_getl16 (12,507,600 samples, 2.09%)</title><rect x="642.1" y="437" width="24.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="645.14" y="447.5" >b..</text>
</g>
<g >
<title>llvm::SelectionDAG::LegalizeTypes (9,140,863 samples, 1.53%)</title><rect x="74.6" y="261" width="18.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="77.63" y="271.5" ></text>
</g>
<g >
<title>_start (2,565,614 samples, 0.43%)</title><rect x="1184.9" y="581" width="5.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1187.94" y="591.5" ></text>
</g>
<g >
<title>bfd_elf_size_dynsym_hash_dynstr (14,046,573 samples, 2.35%)</title><rect x="809.0" y="485" width="27.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="811.97" y="495.5" >b..</text>
</g>
<g >
<title>bfd_hash_allocate (8,035,814 samples, 1.34%)</title><rect x="574.5" y="389" width="15.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="577.52" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="357" width="16.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1122.26" y="367.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (30,153,923 samples, 5.04%)</title><rect x="92.7" y="517" width="59.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="95.66" y="527.5" >[ld-li..</text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (3,628,993 samples, 0.61%)</title><rect x="1135.4" y="517" width="7.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1138.36" y="527.5" ></text>
</g>
<g >
<title>cc1_main (17,001,577 samples, 2.84%)</title><rect x="59.1" y="485" width="33.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="62.12" y="495.5" >cc..</text>
</g>
<g >
<title>bfd_link_hash_traverse (13,512,021 samples, 2.26%)</title><rect x="917.5" y="485" width="26.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="920.51" y="495.5" >b..</text>
</g>
<g >
<title>__libc_start_main (423,500,208 samples, 70.80%)</title><rect x="152.1" y="565" width="835.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="155.15" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (24,902,062 samples, 4.16%)</title><rect x="10.0" y="533" width="49.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >[ld-..</text>
</g>
<g >
<title>llvm::LazyValueInfo::getPredicateOnEdge (7,860,714 samples, 1.31%)</title><rect x="59.1" y="69" width="15.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="62.12" y="79.5" ></text>
</g>
<g >
<title>_bfd_elf_link_hash_table_free (11,559,918 samples, 1.93%)</title><rect x="964.8" y="485" width="22.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="967.77" y="495.5" >_..</text>
</g>
<g >
<title>[libbfd-2.45.0.so] (8,035,814 samples, 1.34%)</title><rect x="574.5" y="405" width="15.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="577.52" y="415.5" ></text>
</g>
<g >
<title>[libLLVM.so.20.1] (7,860,714 samples, 1.31%)</title><rect x="59.1" y="357" width="15.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="62.12" y="367.5" ></text>
</g>
<g >
<title>bfd_link_hash_lookup (34,281,809 samples, 5.73%)</title><rect x="574.5" y="437" width="67.6" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="577.52" y="447.5" >bfd_lin..</text>
</g>
<g >
<title>__sanitizer::ListOfModules::init (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="501" width="16.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1122.26" y="511.5" ></text>
</g>
<g >
<title>[libbfd-2.45.0.so] (67,433,576 samples, 11.27%)</title><rect x="441.5" y="437" width="133.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="444.49" y="447.5" >[libbfd-2.45.0.so]</text>
</g>
<g >
<title>[libbfd-2.45.0.so] (101,715,385 samples, 17.00%)</title><rect x="441.5" y="453" width="200.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="444.49" y="463.5" >[libbfd-2.45.0.so]</text>
</g>
<g >
<title>[libLLVM.so.20.1] (6,798,708 samples, 1.14%)</title><rect x="1105.8" y="533" width="13.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1108.85" y="543.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (26,142,917 samples, 4.37%)</title><rect x="987.6" y="581" width="51.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="990.57" y="591.5" >[ld-l..</text>
</g>
<g >
<title>[libc.so.6] (3,125,748 samples, 0.52%)</title><rect x="1039.1" y="517" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1042.14" y="527.5" ></text>
</g>
<g >
<title>[libLLVM.so.20.1] (7,860,714 samples, 1.31%)</title><rect x="59.1" y="181" width="15.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="62.12" y="191.5" ></text>
</g>
<g >
<title>[clang-20] (17,001,577 samples, 2.84%)</title><rect x="59.1" y="501" width="33.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="62.12" y="511.5" >[c..</text>
</g>
<g >
<title>setlocale (3,125,748 samples, 0.52%)</title><rect x="1039.1" y="565" width="6.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1042.14" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,125,748 samples, 0.52%)</title><rect x="1039.1" y="533" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1042.14" y="543.5" ></text>
</g>
<g >
<title>_bfd_elf_merge_sections (11,958,398 samples, 2.00%)</title><rect x="836.7" y="501" width="23.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="839.68" y="511.5" >_..</text>
</g>
<g >
<title>clang-20 (41,903,639 samples, 7.01%)</title><rect x="10.0" y="597" width="82.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >clang-20</text>
</g>
<g >
<title>clang::FrontendAction::Execute (17,001,577 samples, 2.84%)</title><rect x="59.1" y="437" width="33.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="62.12" y="447.5" >cl..</text>
</g>
<g >
<title>[libLLVM.so.20.1] (7,860,714 samples, 1.31%)</title><rect x="59.1" y="245" width="15.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="62.12" y="255.5" ></text>
</g>
<g >
<title>clang::emitBackendOutput (17,001,577 samples, 2.84%)</title><rect x="59.1" y="405" width="33.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="62.12" y="415.5" >cl..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (30,153,923 samples, 5.04%)</title><rect x="92.7" y="581" width="59.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="95.66" y="591.5" >[ld-li..</text>
</g>
<g >
<title>bfd_link_hash_traverse (14,046,573 samples, 2.35%)</title><rect x="809.0" y="469" width="27.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="811.97" y="479.5" >b..</text>
</g>
<g >
<title>bfd_hash_traverse (19,502,465 samples, 3.26%)</title><rect x="879.0" y="485" width="38.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="882.04" y="495.5" >bfd..</text>
</g>
<g >
<title>[ld] (423,500,208 samples, 70.80%)</title><rect x="152.1" y="581" width="835.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="155.15" y="591.5" >[ld]</text>
</g>
<g >
<title>[sed] (3,125,748 samples, 0.52%)</title><rect x="1039.1" y="581" width="6.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1042.14" y="591.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (9,140,863 samples, 1.53%)</title><rect x="74.6" y="309" width="18.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="77.63" y="319.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,031,440 samples, 1.34%)</title><rect x="1005.7" y="469" width="15.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1008.67" y="479.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (30,153,923 samples, 5.04%)</title><rect x="92.7" y="485" width="59.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="95.66" y="495.5" >[ld-li..</text>
</g>
<g >
<title>fnmatch (25,088,371 samples, 4.19%)</title><rect x="313.1" y="389" width="49.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="316.11" y="399.5" >fnma..</text>
</g>
<g >
<title>llvm::DevirtSCCRepeatedPass::run (7,860,714 samples, 1.31%)</title><rect x="59.1" y="261" width="15.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="62.12" y="271.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (9,140,863 samples, 1.53%)</title><rect x="74.6" y="293" width="18.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="77.63" y="303.5" ></text>
</g>
<g >
<title>bfd_close (10,443,242 samples, 1.75%)</title><rect x="944.2" y="517" width="20.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="947.17" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,708,921 samples, 1.96%)</title><rect x="339.5" y="357" width="23.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.51" y="367.5" >[..</text>
</g>
<g >
<title>[libc.so.6] (11,559,918 samples, 1.93%)</title><rect x="964.8" y="437" width="22.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="967.77" y="447.5" >[..</text>
</g>
<g >
<title>void __lsan::ScanForPointers&lt;__lsan::(anonymous namespace)::DirectMemoryAccessor&gt; (4,751,651 samples, 0.79%)</title><rect x="1175.6" y="485" width="9.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1178.57" y="495.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (35,058,669 samples, 5.86%)</title><rect x="1066.2" y="581" width="69.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1069.20" y="591.5" >[ld-lin..</text>
</g>
<g >
<title>[libbfd-2.45.0.so] (11,559,918 samples, 1.93%)</title><rect x="964.8" y="501" width="22.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="967.77" y="511.5" >[..</text>
</g>
<g >
<title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (7,860,714 samples, 1.31%)</title><rect x="59.1" y="325" width="15.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="62.12" y="335.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISelLegacy::runOnMachineFunction (9,140,863 samples, 1.53%)</title><rect x="74.6" y="325" width="18.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="77.63" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,281,125 samples, 2.22%)</title><rect x="511.3" y="357" width="26.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="514.27" y="367.5" >[..</text>
</g>
<g >
<title>_bfd_elf_slurp_version_tables (12,507,600 samples, 2.09%)</title><rect x="642.1" y="453" width="24.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="645.14" y="463.5" >_..</text>
</g>
<g >
<title>[ld] (347,009,139 samples, 58.01%)</title><rect x="152.1" y="501" width="684.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="155.15" y="511.5" >[ld]</text>
</g>
<g >
<title>void __lsan::ScanForPointers&lt;__lsan::(anonymous namespace)::DirectMemoryAccessor&gt; (5,824,819 samples, 0.97%)</title><rect x="1054.7" y="581" width="11.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1057.71" y="591.5" ></text>
</g>
<g >
<title>dl_iterate_phdr (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="485" width="16.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1122.26" y="495.5" ></text>
</g>
<g >
<title>__libc_start_main (2,565,614 samples, 0.43%)</title><rect x="1184.9" y="565" width="5.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1187.94" y="575.5" ></text>
</g>
<g >
<title>[libbfd-2.45.0.so] (25,088,371 samples, 4.19%)</title><rect x="313.1" y="437" width="49.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="316.11" y="447.5" >[lib..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (26,142,917 samples, 4.37%)</title><rect x="987.6" y="565" width="51.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="990.57" y="575.5" >[ld-l..</text>
</g>
<g >
<title>bfd_make_section_anyway_with_flags (6,521,007 samples, 1.09%)</title><rect x="402.1" y="405" width="12.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="405.14" y="415.5" ></text>
</g>
<g >
<title>[ld] (10,443,242 samples, 1.75%)</title><rect x="944.2" y="469" width="20.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="947.17" y="479.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (20,094,804 samples, 3.36%)</title><rect x="1066.2" y="501" width="39.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1069.20" y="511.5" >[ld..</text>
</g>
<g >
<title>_bfd_elf_strtab_add (10,214,899 samples, 1.71%)</title><rect x="788.8" y="421" width="20.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="791.82" y="431.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="373" width="16.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1122.26" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strdup (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="421" width="16.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1122.26" y="431.5" ></text>
</g>
<g >
<title>_bfd_elf_write_object_contents (10,443,242 samples, 1.75%)</title><rect x="944.2" y="501" width="20.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="947.17" y="511.5" ></text>
</g>
<g >
<title>bfd_hash_table_free (11,559,918 samples, 1.93%)</title><rect x="964.8" y="469" width="22.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="967.77" y="479.5" >b..</text>
</g>
<g >
<title>_bfd_elf_link_info_read_relocs (9,646,357 samples, 1.61%)</title><rect x="720.4" y="437" width="19.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="723.41" y="447.5" ></text>
</g>
<g >
<title>all (598,174,537 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,125,748 samples, 0.52%)</title><rect x="1039.1" y="485" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1042.14" y="495.5" ></text>
</g>
<g >
<title>llvm::ModuleInlinerWrapperPass::run (7,860,714 samples, 1.31%)</title><rect x="59.1" y="341" width="15.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="62.12" y="351.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (30,153,923 samples, 5.04%)</title><rect x="92.7" y="533" width="59.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="95.66" y="543.5" >[ld-li..</text>
</g>
<g >
<title>[libLLVM.so.20.1] (9,140,863 samples, 1.53%)</title><rect x="74.6" y="245" width="18.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="77.63" y="255.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (24,902,062 samples, 4.16%)</title><rect x="10.0" y="517" width="49.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >[ld-..</text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;, __sanitizer::LargeMmapAllocatorPtrArrayStatic&gt;::Allocate (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="389" width="16.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1122.26" y="399.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (10,072,972 samples, 1.68%)</title><rect x="1142.5" y="501" width="19.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1145.52" y="511.5" ></text>
</g>
<g >
<title>[unknown] (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="277" width="16.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1122.26" y="287.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (17,205,020 samples, 2.88%)</title><rect x="987.6" y="517" width="33.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="990.57" y="527.5" >[l..</text>
</g>
<g >
<title>bfd_elf_link_add_symbols (37,490,627 samples, 6.27%)</title><rect x="288.6" y="453" width="74.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="291.65" y="463.5" >bfd_elf_..</text>
</g>
<g >
<title>[libbfd-2.45.0.so] (35,984,916 samples, 6.02%)</title><rect x="695.2" y="469" width="71.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="698.19" y="479.5" >[libbfd-..</text>
</g>
<g >
<title>__sanitizer::TwoLevelMap&lt;unsigned char, 32768ull, 4096ull, __sanitizer::LocalAddressSpaceView&gt;::Create (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="325" width="16.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1122.26" y="335.5" ></text>
</g>
<g >
<title>llvm::PassManager&lt;llvm::Module, llvm::AnalysisManager&lt;llvm::Module&gt;&gt;::run (7,860,714 samples, 1.31%)</title><rect x="59.1" y="373" width="15.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="62.12" y="383.5" ></text>
</g>
<g >
<title>[ld] (67,433,576 samples, 11.27%)</title><rect x="441.5" y="421" width="133.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="444.49" y="431.5" >[ld]</text>
</g>
<g >
<title>[libc.so.6] (8,937,897 samples, 1.49%)</title><rect x="1021.5" y="517" width="17.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1024.51" y="527.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (24,902,062 samples, 4.16%)</title><rect x="10.0" y="581" width="49.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >[ld-..</text>
</g>
<g >
<title>tspp (62,755,099 samples, 10.49%)</title><rect x="1066.2" y="597" width="123.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1069.20" y="607.5" >tspp</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (12,428,844 samples, 2.08%)</title><rect x="1081.3" y="485" width="24.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1084.33" y="495.5" >[..</text>
</g>
<g >
<title>__lsan::InitializePlatformSpecificModules (8,165,157 samples, 1.37%)</title><rect x="1119.3" y="517" width="16.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1122.26" y="527.5" ></text>
</g>
<g >
<title>bfd_elf_link_add_symbols (127,653,473 samples, 21.34%)</title><rect x="415.0" y="469" width="251.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="418.00" y="479.5" >bfd_elf_link_add_symbols</text>
</g>
<g >
<title>[libLLVM.so.20.1] (8,937,897 samples, 1.49%)</title><rect x="1021.5" y="533" width="17.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1024.51" y="543.5" ></text>
</g>
</g>
</svg>
